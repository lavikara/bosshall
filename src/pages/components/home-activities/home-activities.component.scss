app-home-activities-component, app-brand-include-component {


  .little-box {
    border-left: 1px solid map_get($colors, lightSmoke);
    margin-top: 15px;
    border-bottom: 1px solid map_get($colors, lightSmoke);

    .inner-little-box {
      padding-bottom: 15px;

      .nano-content {
        .little-box-row {
          padding-right: 15px;

        }

      }

      &.right {
        margin-right: 15px;
        border-right: 1px solid map_get($colors, lightSmoke);
      }
    }


    .parent-little-box-row {

      margin-top: 15px;
      height: 30vh;
      min-height: 340px;
      overflow-x: hidden;
      overflow-y: auto;

      .nano-content {

      }
    }

    .little-box-header {
      border-bottom: 1px solid map_get($colors, lightSmoke);
      padding-left: 8px;

      &.row {
        margin: 0;

        [class*=col-] {
          padding: 0;

          h4 {
            font-size: 14px;
            margin: 0;
            color: map_get($colors, primary);
            font-weight: 600;
            padding-bottom: 10px;
            text-transform: uppercase;
          }

          .material-icons {
            font-size: 16px;
            color: map_get($colors, secondary);
            cursor: pointer;

            &.activity-cog {
              margin-right: 15px;
            }
          }

          .brand-title {
            display: flex;
            flex-direction: column;
            justify-content: center;

            h4 {
              padding-top: 4px;
              padding-bottom: 6px;
            }
          }

          .filter {
            padding-right: 15px;
            display: inline-flex;
            flex-direction: row;

            .icon-holder, .input-holder {
              display: flex;
              flex-direction: column;
              justify-content: center;
            }

            .icon-holder {
              margin-right: 3px;

              .material-icons {
                color: map_get($colors, smoke);
                font-size: 14px;
              }
            }

            input {
              border: none;
              width: 100px;
              outline: none;
              @include placeholder(map_get($colors, smoke), 11px, 400)
            }
          }
        }
      }

    }

    .little-box-row {
      padding-left: 8px;
      padding-top: 8px;
      padding-bottom: 8px;

      &.active {
        border-left: 5px solid map_get($colors, danger);
        background: map_get($colors, lightSmoke);
      }

      &:hover {
        background: map_get($colors, lightSmoke);
        @include box-shadow(2px 0 2px rgba(map_get($colors, primary), 0.5));
      }

      .row {
        .col {
          padding: 0;

          &.avatar {
            max-width: 45px;

            img {
              width: 35px;
              margin-right: 10px;
              object-fit: cover;
              height: 35px;
              @include border-radius(5px);
            }
          }

          &.body {
            .title-heading {
              margin-bottom: 6px;

              [class*=col-] {
                padding: 0;

                h5 {
                  margin: 0;
                  font-size: 12px;
                  line-height: 15px;
                  font-weight: 600;
                }

                p {
                  margin-top: 6px;
                }

                .material-icons {
                  float: right;
                  font-size: 14px;
                  color: map_get($colors, secondary);
                }
              }
            }

            p {
              font-size: 11px;
              color: map_get($colors, dark);
              line-height: 12px;
              margin-bottom: 3px;
            }

            .time {
              font-size: 11px;
              font-weight: 600;
              color: map_get($colors, primary);
            }

            [class*=col-] {
              padding: 0;

              .toggle-holder {
                cursor: pointer;

                .material-icons {
                  font-size: 36px;

                  &.off {
                    color: map_get($colors, smoke);
                  }

                  &.on {
                    color: map_get($colors, danger);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
